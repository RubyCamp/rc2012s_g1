require "dxruby"
require "dxrubyex"
#require_relative "player" 


class Maps
  def initialize
    @mapArray = []
    
    map0 = [
    [0, 20, 10, 11, 12, 10, 11, 12, 0, 0, 0, 0, 0, 0, 0, 30, 30, 30],
    [0, 0, 20, 20, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0],
    [20, 0, 20, 0, 20, 20, 0, 20, 0, 20, 0, 0, 20, 0, 20, 0, 20, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 20, 0, 0, 0, 0, 0, 20, 0],
    [0, 20, 0, 20, 20, 20, 20, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 0],
    [0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 20, 20, 20, 20, 20, 0, 0],
    [20, 20, 20, 20, 20, 0, 0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0],
    [0, 0, 20, 0, 0, 0, 20, 0, 0, 20, 20, 20, 20, 0, 20, 0, 0, 0],
    [0, 0, 0, 0, 0, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 20, 0, 20, 0, 0, 20, 0, 20, 0, 20, 20, 0, 43, 0, 43, 0, 0],
    [0, 0, 0, 0, 20, 0, 0, 0, 20, 0, 0, 0, 20, 20, 0, 0, 0, 0],
    [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0, 0, 20, 0, 0, 0, 0],
    [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0, 0, 20, 0, 0, 0, 0],
    [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0, 0, 20, 0, 0, 0, 0],
    [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0, 0, 20, 0, 0, 0, 0],
    [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0, 0, 20, 0, 0, 0, 0],
    [0, 0, 20, 20, 20, 0, 0, 20, 20, 20, 0, 0, 0, 20, 0, 0, 0, 0],
    [20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ]
    @mapArray << map0
    
    map1 = [
    [0,20,43,0,0,0,20,20,0,0,0,0,0,0,0,0,20,43],
    [0,0,20,20,0,0,0,20,20,0,0,20,20,20,20,0,20,0  ],
    [0,0,0,20,20,0,0,0,20,20,0,20,20,0,0,0,20,0  ],
    [20,0,0,0,20,20,0,0,0,20,0,0,20,0,0,0,0,0  ],
    [0,20,0,0,0,20,20,20,0,0,0,12,0,20,20,20,0,0  ],
    [0,20,20,0,0,0,0,20,20,0,0,0,0,43,20,20,20,0 ],
    [0,0,20,20,0,0,0,0,20,20,0,0,0,20,0,0,0,0  ],
    [0,0,0,20,20,0,0,0,0,0,20,20,0,0,0,20,0,0  ],
    [43,11,0,0,20,20,0,0,0,10,20,0,0,0,20,20,0,0 ],
    [20,0,0,0,0,20,20,20,0,0,20,0,0,20,20,0,0,20  ],
    [20,20,0,0,0,0,0,20,20,0,0,0,0,20,0,0,20,43 ],
    [0,20,0,0,20,0,0,0,0,0,0,0,20,0,0,20,20,0  ],
    [0,20,20,20,20,0,43,0,0,0,20,30,20,0,0,0,0,0 ],
    [0,0,20,0,0,0,0,0,20,20,20,0,0,0,11,20,20,0  ],
    [43,0,0,0,0,20,0,20,20,0,0,0,0,20,20,20,0,0  ],
    [20,0,0,20,20,0,0,0,0,0,0,0,20,0,0,0,0,20  ],
    [20,20,20,20,0,0,20,0,0,20,0,30,0,0,0,20,20,0 ],
    [20,20,12,0,0,0,20,0,20,20,0,0,30,0,0,0,0,0  ],
    ]
    @mapArray << map1
  end
  
  def getMap(num)
    @mapArray[num]
  end

  def size
    @mapArray.size
  end
end